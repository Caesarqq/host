services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "80"         
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - "8000"
    depends_on:
      - db
      - redis
      - rabbitmq

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery
    depends_on:
      - db
      - redis
      - backend
      - rabbitmq

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-beat
    volumes:
      - celerybeat_data:/app/celerybeat
    depends_on:
      - db
      - redis
      - backend
      - rabbitmq

  frontend-dev:
    image: node:18
    container_name: frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    ports:
      - "5173:5173"  
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  db_data:
  redis_data:
  celerybeat_data:
